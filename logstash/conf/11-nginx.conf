filter {
  if [type] in ["nginx-access", "nginx-static-access"] {
    grok {
      patterns_dir => "/etc/logstash/patterns"
      match => [ "message", "%{NGINX_ACCESS}" ]
    }

    geoip {
      source => "client_ip"
      fields => ["city_name", "country_code2", "latitude", "longitude"]
    }

    date {
      match => [ "time" , "dd/MMM/YYYY:HH:mm:ss Z" ]
    }
  }
}
filter {
    grok {
        match => { "message" => "(?<datetime>\d\d\d\d/\d\d/\d\d \d\d:\d\d:\d\d) \[(?<errtype>\w+)\] \S+: \*\d+ (?<errmsg>[^,]+), (?<errinfo>.*)$" }
    }
    mutate {
        rename => [ "host", "fromhost" ]
        gsub => [ "errmsg", "too large body: \d+ bytes", "too large body" ]
    }
    if [errinfo]
    {
        ruby {
            code => "event.append(Hash[event['errinfo'].split(', ').map{|l| l.split(': ')}])"
        }
    }
    grok {
        match => { "request" => '"%{WORD:verb} %{URIPATH:urlpath}(?:\?%{NGX_URIPARAM:urlparam})?(?: HTTP/%{NUMBER:httpversion})"' }
        patterns_dir => "/etc/logstash/patterns"
        remove_field => [ "message", "errinfo", "request" ]
    }
}
